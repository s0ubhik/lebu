
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightEQUALSrightDEQUALSrightNEQUALSrightGEQUALSrightLEQUALSrightRABRACKrightLABRACKrightNUMBERrightNAMErightLPARENLSBRACKCHAR CLASS COLON COMMA DDOT DEQUALS DIVIDE DOT ELSE EQUALS FLOAT FOR FUNC GEQUALS HSCOM IF IMPORT IN LABRACK LCBRACK LEQUALS LPAREN LSBRACK MINUS MLCOM NAME NEQUALS NEWLINE NUMBER PLUS RABRACK RCBRACK RETURN RPAREN RSBRACK SLCOM STRING TIMES WHILE\n  code : stmts\n  \n  stmts : stmt\n  \n  stmts : stmt COLON stmts\n        | stmt NEWLINE stmts\n  \n  stmt : expr\n       | assign\n       | empty\n       | function\n       | if\n       | while\n       | for\n       | return\n       | class\n       | comment\n  \n  comment : SLCOM\n  \n  comment : HSCOM\n  \n  comment : MLCOM\n  \n  suite : stmt\n  \n  suite : LCBRACK stmts RCBRACK\n  \n  empty :\n  \n\texpr : call\n\t\n  expr : const\n  \n  const : NUMBER\n  \n  const : FLOAT\n  \n  const : CHAR\n  \n  const : STRING\n  \n  expr : array\n  \n\targ_list : LPAREN RPAREN\n\t\n\targ_list : LPAREN expr RPAREN\n\t\n\targ_list : LPAREN lst RPAREN\n\t\n\tarray : LSBRACK lst RSBRACK\n\t\n  array : LSBRACK expr RSBRACK\n  \n  lst : expr COMMA\n  \n  lst : expr COMMA lst\n  \n  lst : expr COMMA expr\n  \n  expr : id LSBRACK expr RSBRACK\n  \n  expr : id\n  \n  expr : expr PLUS expr\n       | expr MINUS expr\n       | expr TIMES expr\n       | expr DIVIDE expr\n  \t   | expr DEQUALS expr\n  \t   | expr NEQUALS expr\n  \t   | expr RABRACK expr\n  \t   | expr LABRACK expr\n  \t   | expr GEQUALS expr\n  \t   | expr LEQUALS expr\n  \n  expr : LPAREN expr RPAREN\n  \n  method : NAME\n  \n  method : method DOT NAME \n  \n  call : method DOT NAME arg_list\n  \n  call : NAME arg_list\n  \n  assign : id LSBRACK expr RSBRACK EQUALS assign\n         | id LSBRACK expr RSBRACK EQUALS expr\n  \n  assign : id EQUALS assign\n         | id EQUALS expr\n  \n  id : NAME method\n  \n  id : method\n  \n  function : FUNC id arg_list suite\n  \n  if : IF expr suite else\n  \n  if : IF expr suite\n  \n  else : ELSE suite\n  \n  while : WHILE expr suite\n  \n  return : RETURN expr\n  \n  class : CLASS NAME suite\n  \n  for : FOR expr IN expr DDOT expr suite\n  '
    
_lr_action_items = {'LPAREN':([0,14,15,16,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,53,54,55,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,82,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[19,-21,-22,-27,19,19,19,19,19,19,64,-58,-23,-24,-25,-26,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-37,64,-49,-58,19,19,19,-49,-52,-57,19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,64,-31,-32,19,19,-48,19,19,19,-28,64,19,-50,19,-29,-30,-51,19,-36,19,19,]),'COLON':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,29,30,31,32,33,34,35,36,51,56,57,59,60,61,62,63,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,91,92,93,94,96,97,100,101,106,107,108,109,112,113,114,117,118,119,121,122,123,124,125,],[-20,35,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-22,-27,-37,-49,-15,-16,-17,-58,-23,-24,-25,-26,-20,-20,-37,-20,-20,-64,-20,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-37,-55,-56,-49,-58,-31,-32,-48,-20,-61,-18,-20,-63,-65,-28,-50,-36,-59,-50,-60,-20,-29,-30,-51,-36,-62,-19,-54,-53,-36,-20,-66,]),'NEWLINE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,29,30,31,32,33,34,35,36,51,56,57,59,60,61,62,63,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,91,92,93,94,96,97,100,101,106,107,108,109,112,113,114,117,118,119,121,122,123,124,125,],[-20,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-22,-27,-37,-49,-15,-16,-17,-58,-23,-24,-25,-26,-20,-20,-37,-20,-20,-64,-20,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-37,-55,-56,-49,-58,-31,-32,-48,-20,-61,-18,-20,-63,-65,-28,-50,-36,-59,-50,-60,-20,-29,-30,-51,-36,-62,-19,-54,-53,-36,-20,-66,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,29,30,31,32,33,34,35,36,51,56,57,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,91,92,94,96,97,100,101,106,107,108,109,112,113,114,117,118,119,121,122,123,124,125,],[-20,0,-1,-2,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-22,-27,-37,-49,-15,-16,-17,-58,-23,-24,-25,-26,-20,-20,-37,-20,-20,-64,-20,-49,-52,-57,-3,-4,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-37,-55,-56,-49,-58,-31,-32,-48,-20,-61,-18,-63,-65,-28,-50,-36,-59,-50,-60,-20,-29,-30,-51,-36,-62,-19,-54,-53,-36,-20,-66,]),'FUNC':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[20,-21,-22,-27,-49,-58,-23,-24,-25,-26,20,20,-37,20,20,20,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,20,20,-28,-50,-50,20,-29,-30,-51,-36,20,]),'IF':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[21,-21,-22,-27,-49,-58,-23,-24,-25,-26,21,21,-37,21,21,21,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,21,21,-28,-50,-50,21,-29,-30,-51,-36,21,]),'WHILE':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[22,-21,-22,-27,-49,-58,-23,-24,-25,-26,22,22,-37,22,22,22,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,22,22,-28,-50,-50,22,-29,-30,-51,-36,22,]),'FOR':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[23,-21,-22,-27,-49,-58,-23,-24,-25,-26,23,23,-37,23,23,23,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,23,23,-28,-50,-50,23,-29,-30,-51,-36,23,]),'RETURN':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[24,-21,-22,-27,-49,-58,-23,-24,-25,-26,24,24,-37,24,24,24,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,24,24,-28,-50,-50,24,-29,-30,-51,-36,24,]),'CLASS':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[25,-21,-22,-27,-49,-58,-23,-24,-25,-26,25,25,-37,25,25,25,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,25,25,-28,-50,-50,25,-29,-30,-51,-36,25,]),'SLCOM':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[27,-21,-22,-27,-49,-58,-23,-24,-25,-26,27,27,-37,27,27,27,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,27,27,-28,-50,-50,27,-29,-30,-51,-36,27,]),'HSCOM':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[28,-21,-22,-27,-49,-58,-23,-24,-25,-26,28,28,-37,28,28,28,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,28,28,-28,-50,-50,28,-29,-30,-51,-36,28,]),'MLCOM':([0,14,15,16,26,30,31,32,33,34,35,36,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,93,97,100,107,109,112,113,114,117,124,],[29,-21,-22,-27,-49,-58,-23,-24,-25,-26,29,29,-37,29,29,29,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,29,29,-28,-50,-50,29,-29,-30,-51,-36,29,]),'NAME':([0,14,15,16,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,54,56,57,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,82,84,85,86,87,88,89,90,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[26,-21,-22,-27,26,26,54,26,26,26,26,60,61,-58,-23,-24,-25,-26,26,26,26,26,26,26,26,26,26,26,26,26,26,82,-37,61,26,26,26,-49,-52,-57,26,100,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,61,-31,-32,26,26,-48,26,107,26,26,-28,-50,26,-50,26,-29,-30,-51,82,-36,26,26,]),'NUMBER':([0,14,15,16,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[31,-21,-22,-27,31,31,31,31,31,31,-49,-58,-23,-24,-25,-26,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-37,31,31,31,-49,-52,-57,31,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,31,31,-48,31,31,31,-28,-50,31,-50,31,-29,-30,-51,31,-36,31,31,]),'FLOAT':([0,14,15,16,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[32,-21,-22,-27,32,32,32,32,32,32,-49,-58,-23,-24,-25,-26,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-37,32,32,32,-49,-52,-57,32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,32,32,-48,32,32,32,-28,-50,32,-50,32,-29,-30,-51,32,-36,32,32,]),'CHAR':([0,14,15,16,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[33,-21,-22,-27,33,33,33,33,33,33,-49,-58,-23,-24,-25,-26,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-37,33,33,33,-49,-52,-57,33,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,33,33,-48,33,33,33,-28,-50,33,-50,33,-29,-30,-51,33,-36,33,33,]),'STRING':([0,14,15,16,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[34,-21,-22,-27,34,34,34,34,34,34,-49,-58,-23,-24,-25,-26,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-37,34,34,34,-49,-52,-57,34,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,34,34,-48,34,34,34,-28,-50,34,-50,34,-29,-30,-51,34,-36,34,34,]),'LSBRACK':([0,14,15,16,17,18,19,21,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,79,82,83,84,85,86,87,88,89,93,95,97,100,102,107,109,112,113,114,115,117,120,124,],[18,-21,-22,-27,47,18,18,18,18,18,18,-49,-58,-23,-24,-25,-26,18,18,18,18,18,18,18,18,18,18,18,18,18,18,87,18,18,18,-49,-52,-57,18,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,102,-49,-58,-31,-32,18,18,-48,18,18,18,-28,-50,18,-50,18,-29,-30,-51,18,-36,18,18,]),'RCBRACK':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,29,30,31,32,33,34,35,36,51,56,57,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,91,92,93,94,96,97,100,101,106,107,108,109,110,112,113,114,117,118,119,121,122,123,124,125,],[-2,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-22,-27,-37,-49,-15,-16,-17,-58,-23,-24,-25,-26,-20,-20,-37,-20,-20,-64,-20,-49,-52,-57,-3,-4,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-37,-55,-56,-49,-58,-31,-32,-48,-20,-61,-18,-20,-63,-65,-28,-50,-36,-59,-50,-60,-20,119,-29,-30,-51,-36,-62,-19,-54,-53,-36,-20,-66,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,29,30,31,32,33,34,51,56,57,59,60,61,62,63,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,91,92,94,96,97,100,101,106,107,108,109,112,113,114,117,118,119,121,122,123,124,125,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-22,-27,-37,-49,-15,-16,-17,-58,-23,-24,-25,-26,-37,-20,-20,-64,-20,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-37,-55,-56,-49,-58,-31,-32,-48,-20,109,-18,-63,-65,-28,-50,-36,-59,-50,-60,-20,-29,-30,-51,-36,-62,-19,-54,-53,-36,-20,-66,]),'PLUS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[37,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,37,-37,37,37,37,37,37,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,37,-37,37,-49,-58,-31,-32,-48,-28,37,-50,-36,37,37,-50,37,-29,-30,-51,37,-36,37,-36,37,]),'MINUS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[38,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,38,-37,38,38,38,38,38,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,38,-37,38,-49,-58,-31,-32,-48,-28,38,-50,-36,38,38,-50,38,-29,-30,-51,38,-36,38,-36,38,]),'TIMES':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[39,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,39,-37,39,39,39,39,39,-49,-52,-57,39,39,-40,-41,-42,-43,-44,-45,-46,-47,39,-37,39,-49,-58,-31,-32,-48,-28,39,-50,-36,39,39,-50,39,-29,-30,-51,39,-36,39,-36,39,]),'DIVIDE':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[40,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,40,-37,40,40,40,40,40,-49,-52,-57,40,40,-40,-41,-42,-43,-44,-45,-46,-47,40,-37,40,-49,-58,-31,-32,-48,-28,40,-50,-36,40,40,-50,40,-29,-30,-51,40,-36,40,-36,40,]),'DEQUALS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[41,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,41,-37,41,41,41,41,41,-49,-52,-57,41,41,41,41,41,-43,-44,-45,-46,-47,41,-37,41,-49,-58,-31,-32,-48,-28,41,-50,-36,41,41,-50,41,-29,-30,-51,41,-36,41,-36,41,]),'NEQUALS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[42,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,42,-37,42,42,42,42,42,-49,-52,-57,42,42,42,42,42,42,-44,-45,-46,-47,42,-37,42,-49,-58,-31,-32,-48,-28,42,-50,-36,42,42,-50,42,-29,-30,-51,42,-36,42,-36,42,]),'RABRACK':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[43,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,43,-37,43,43,43,43,43,-49,-52,-57,43,43,43,43,43,43,43,-45,43,43,43,-37,43,-49,-58,-31,-32,-48,-28,43,-50,-36,43,43,-50,43,-29,-30,-51,43,-36,43,-36,43,]),'LABRACK':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[44,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,44,-37,44,44,44,44,44,-49,-52,-57,44,44,44,44,44,44,44,44,44,44,44,-37,44,-49,-58,-31,-32,-48,-28,44,-50,-36,44,44,-50,44,-29,-30,-51,44,-36,44,-36,44,]),'GEQUALS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[45,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,45,-37,45,45,45,45,45,-49,-52,-57,45,45,45,45,45,45,-44,-45,45,-47,45,-37,45,-49,-58,-31,-32,-48,-28,45,-50,-36,45,45,-50,45,-29,-30,-51,45,-36,45,-36,45,]),'LEQUALS':([4,14,15,16,17,26,30,31,32,33,34,50,51,52,56,57,58,59,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,97,98,100,101,103,105,107,111,112,113,114,116,117,121,123,124,],[46,-21,-22,-27,-37,-49,-58,-23,-24,-25,-26,46,-37,46,46,46,46,46,-49,-52,-57,46,46,46,46,46,46,-44,-45,46,46,46,-37,46,-49,-58,-31,-32,-48,-28,46,-50,-36,46,46,-50,46,-29,-30,-51,46,-36,46,-36,46,]),'RSBRACK':([14,15,16,26,30,31,32,33,34,49,50,51,61,62,63,68,69,70,71,72,73,74,75,76,77,78,84,85,86,88,97,100,103,104,105,107,112,113,114,116,117,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,84,85,-37,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,101,-31,-32,-33,-48,-28,-50,-35,-34,117,-50,-29,-30,-51,123,-36,]),'COMMA':([14,15,16,26,30,31,32,33,34,50,51,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,97,98,100,103,107,112,113,114,117,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,86,-37,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,-28,86,-50,86,-50,-29,-30,-51,-36,]),'RPAREN':([14,15,16,26,30,31,32,33,34,51,52,61,62,63,64,68,69,70,71,72,73,74,75,76,77,84,85,86,88,97,98,99,100,103,104,107,112,113,114,117,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,-37,88,-49,-52,-57,97,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-33,-48,-28,112,113,-50,-35,-34,-50,-29,-30,-51,-36,]),'LCBRACK':([14,15,16,26,30,31,32,33,34,51,56,57,60,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,89,97,100,107,109,112,113,114,117,124,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,-37,93,93,93,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,93,-28,-50,-50,93,-29,-30,-51,-36,93,]),'IN':([14,15,16,26,30,31,32,33,34,51,58,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,97,100,107,112,113,114,117,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,-37,95,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,-28,-50,-50,-29,-30,-51,-36,]),'DDOT':([14,15,16,26,30,31,32,33,34,51,61,62,63,68,69,70,71,72,73,74,75,76,77,84,85,88,97,100,107,111,112,113,114,117,],[-21,-22,-27,-49,-58,-23,-24,-25,-26,-37,-49,-52,-57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-31,-32,-48,-28,-50,-50,120,-29,-30,-51,-36,]),'EQUALS':([17,26,30,61,63,79,82,83,100,101,107,123,],[48,-49,-58,-49,-57,48,-49,-58,-50,115,-50,115,]),'DOT':([26,30,54,55,61,63,82,83,100,107,],[-49,65,-49,90,-49,90,-49,65,-50,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'stmts':([0,35,36,93,],[2,66,67,110,]),'stmt':([0,35,36,56,57,60,89,93,109,124,],[3,3,3,92,92,92,92,3,92,92,]),'expr':([0,18,19,21,22,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,60,64,86,87,89,93,95,102,109,115,120,124,],[4,50,52,56,57,58,59,4,4,68,69,70,71,72,73,74,75,76,77,78,81,4,4,4,98,103,105,4,4,111,116,4,121,124,4,]),'assign':([0,35,36,48,56,57,60,89,93,109,115,124,],[5,5,5,80,5,5,5,5,5,5,122,5,]),'empty':([0,35,36,56,57,60,89,93,109,124,],[6,6,6,6,6,6,6,6,6,6,]),'function':([0,35,36,56,57,60,89,93,109,124,],[7,7,7,7,7,7,7,7,7,7,]),'if':([0,35,36,56,57,60,89,93,109,124,],[8,8,8,8,8,8,8,8,8,8,]),'while':([0,35,36,56,57,60,89,93,109,124,],[9,9,9,9,9,9,9,9,9,9,]),'for':([0,35,36,56,57,60,89,93,109,124,],[10,10,10,10,10,10,10,10,10,10,]),'return':([0,35,36,56,57,60,89,93,109,124,],[11,11,11,11,11,11,11,11,11,11,]),'class':([0,35,36,56,57,60,89,93,109,124,],[12,12,12,12,12,12,12,12,12,12,]),'comment':([0,35,36,56,57,60,89,93,109,124,],[13,13,13,13,13,13,13,13,13,13,]),'call':([0,18,19,21,22,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,60,64,86,87,89,93,95,102,109,115,120,124,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'const':([0,18,19,21,22,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,60,64,86,87,89,93,95,102,109,115,120,124,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'array':([0,18,19,21,22,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,60,64,86,87,89,93,95,102,109,115,120,124,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'id':([0,18,19,20,21,22,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,60,64,86,87,89,93,95,102,109,115,120,124,],[17,51,51,53,51,51,51,51,17,17,51,51,51,51,51,51,51,51,51,51,51,79,17,17,17,51,51,51,17,17,51,51,17,79,51,17,]),'method':([0,18,19,20,21,22,23,24,26,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,56,57,60,64,82,86,87,89,93,95,102,109,115,120,124,],[30,30,30,55,30,30,30,30,63,30,30,30,30,30,30,30,30,30,30,30,30,30,83,63,30,30,30,30,63,30,30,30,30,30,30,30,83,30,30,]),'lst':([18,64,86,],[49,99,104,]),'arg_list':([26,53,82,100,],[62,89,62,114,]),'suite':([56,57,60,89,109,124,],[91,94,96,106,118,125,]),'else':([91,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> stmts','code',1,'p_code','parser.py',24),
  ('stmts -> stmt','stmts',1,'p_stmts_single','parser.py',32),
  ('stmts -> stmt COLON stmts','stmts',3,'p_stmts_multi','parser.py',38),
  ('stmts -> stmt NEWLINE stmts','stmts',3,'p_stmts_multi','parser.py',39),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',45),
  ('stmt -> assign','stmt',1,'p_stmt','parser.py',46),
  ('stmt -> empty','stmt',1,'p_stmt','parser.py',47),
  ('stmt -> function','stmt',1,'p_stmt','parser.py',48),
  ('stmt -> if','stmt',1,'p_stmt','parser.py',49),
  ('stmt -> while','stmt',1,'p_stmt','parser.py',50),
  ('stmt -> for','stmt',1,'p_stmt','parser.py',51),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',52),
  ('stmt -> class','stmt',1,'p_stmt','parser.py',53),
  ('stmt -> comment','stmt',1,'p_stmt','parser.py',54),
  ('comment -> SLCOM','comment',1,'p_comment_sl','parser.py',60),
  ('comment -> HSCOM','comment',1,'p_comment_hs','parser.py',66),
  ('comment -> MLCOM','comment',1,'p_comment_ml','parser.py',72),
  ('suite -> stmt','suite',1,'p_suite_stmt','parser.py',79),
  ('suite -> LCBRACK stmts RCBRACK','suite',3,'p_suite_multi_stmt','parser.py',85),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',91),
  ('expr -> call','expr',1,'p_expr_call','parser.py',97),
  ('expr -> const','expr',1,'p_expr_const','parser.py',103),
  ('const -> NUMBER','const',1,'p_const_num','parser.py',109),
  ('const -> FLOAT','const',1,'p_const_flt','parser.py',115),
  ('const -> CHAR','const',1,'p_const_chr','parser.py',121),
  ('const -> STRING','const',1,'p_const_str','parser.py',128),
  ('expr -> array','expr',1,'p_const_arr','parser.py',134),
  ('arg_list -> LPAREN RPAREN','arg_list',2,'p_arg_lst_none','parser.py',147),
  ('arg_list -> LPAREN expr RPAREN','arg_list',3,'p_arg_lst_sngle','parser.py',153),
  ('arg_list -> LPAREN lst RPAREN','arg_list',3,'p_arg_lst','parser.py',159),
  ('array -> LSBRACK lst RSBRACK','array',3,'p_array_lst','parser.py',165),
  ('array -> LSBRACK expr RSBRACK','array',3,'p_array_lst_single','parser.py',171),
  ('lst -> expr COMMA','lst',2,'p_lst','parser.py',178),
  ('lst -> expr COMMA lst','lst',3,'p_lst_lst','parser.py',184),
  ('lst -> expr COMMA expr','lst',3,'p_lst_expr','parser.py',190),
  ('expr -> id LSBRACK expr RSBRACK','expr',4,'p_expr_var_arr','parser.py',196),
  ('expr -> id','expr',1,'p_expr_var','parser.py',202),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus_minus','parser.py',208),
  ('expr -> expr MINUS expr','expr',3,'p_expr_plus_minus','parser.py',209),
  ('expr -> expr TIMES expr','expr',3,'p_expr_plus_minus','parser.py',210),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_plus_minus','parser.py',211),
  ('expr -> expr DEQUALS expr','expr',3,'p_expr_plus_minus','parser.py',212),
  ('expr -> expr NEQUALS expr','expr',3,'p_expr_plus_minus','parser.py',213),
  ('expr -> expr RABRACK expr','expr',3,'p_expr_plus_minus','parser.py',214),
  ('expr -> expr LABRACK expr','expr',3,'p_expr_plus_minus','parser.py',215),
  ('expr -> expr GEQUALS expr','expr',3,'p_expr_plus_minus','parser.py',216),
  ('expr -> expr LEQUALS expr','expr',3,'p_expr_plus_minus','parser.py',217),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser.py',223),
  ('method -> NAME','method',1,'p_method','parser.py',229),
  ('method -> method DOT NAME','method',3,'p_mth_','parser.py',235),
  ('call -> method DOT NAME arg_list','call',4,'p_call_arg_method','parser.py',241),
  ('call -> NAME arg_list','call',2,'p_call_arg','parser.py',248),
  ('assign -> id LSBRACK expr RSBRACK EQUALS assign','assign',6,'p_assign_arr','parser.py',255),
  ('assign -> id LSBRACK expr RSBRACK EQUALS expr','assign',6,'p_assign_arr','parser.py',256),
  ('assign -> id EQUALS assign','assign',3,'p_assign','parser.py',263),
  ('assign -> id EQUALS expr','assign',3,'p_assign','parser.py',264),
  ('id -> NAME method','id',2,'p_id_typ','parser.py',271),
  ('id -> method','id',1,'p_id_dot','parser.py',277),
  ('function -> FUNC id arg_list suite','function',4,'p_function_def','parser.py',283),
  ('if -> IF expr suite else','if',4,'p_if_else','parser.py',289),
  ('if -> IF expr suite','if',3,'p_if','parser.py',295),
  ('else -> ELSE suite','else',2,'p_else','parser.py',301),
  ('while -> WHILE expr suite','while',3,'p_while','parser.py',307),
  ('return -> RETURN expr','return',2,'p_return','parser.py',313),
  ('class -> CLASS NAME suite','class',3,'p_class','parser.py',319),
  ('for -> FOR expr IN expr DDOT expr suite','for',7,'p_for','parser.py',326),
]
